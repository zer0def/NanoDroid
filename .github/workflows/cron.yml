on:
  schedule:
  - cron: '0 0 * * 0'
  workflow_dispatch:

jobs:
  run:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ github.token }}
    steps:
    - run: |
        [ "${GITHUB_TOKEN}" ] || exit 0

        api="https://api.github.com/repos/${GITHUB_REPOSITORY}/releases"
        tag="$(date +%Y%m%d)" auth="Authorization: token ${GITHUB_TOKEN}"
        id="$(curl -fs -H "${auth}" "${api}/tags/${tag}" | jq -r .id)"
        [ -z "${id}" ] || [ "${id}" = "null" ] || exit 0

        git clone "${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}" .
        ./build-package pull
        #./build-package all ||:
        ./build-package bromitewebview ||:

        id="$(echo "{\"tag_name\":\"${tag}\",\"draft\":true}" | curl -s -d@- -H "${auth}" -H "Content-Type: application/json" "${api}" | jq -r .id)"
        [ -n "${id}" ] && [ "${id}" != "null" ] || exit 1

        #for i in NanoDroid NanoDroid-BromiteWebView NanoDroid-MulchWebView; do
        for i in NanoDroid-MulchWebView; do
          curl -s -d@"${i}-23.2.${tag}.zip" -o /dev/null -H "${auth}" -H "Content-Type: application/octet-stream" "https://uploads.github.com/repos/${GITHUB_REPOSITORY}/releases/${id}/assets?name=$(basename ${i}-23.2.${tag}.zip)"
          curl -s -d@"${i}-23.2.${tag}.zip.sha256" -o /dev/null -H "${auth}" -H "Content-Type: application/octet-stream" "https://uploads.github.com/repos/${GITHUB_REPOSITORY}/releases/${id}/assets?name=$(basename ${i}-23.2.${tag}.zip.sha256)"
        done
        echo '{"draft":false}' | curl -s -o /dev/null -XPATCH -d@- -H "${auth}" -H "Content-Type: application/json" "${api}/${id}"
